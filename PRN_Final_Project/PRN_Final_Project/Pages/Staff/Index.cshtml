@page
@model PRN_Final_Project.Pages.Staff.IndexModel
@{
	ViewData["Title"] = "Booking Management";
}

<div class="container-fluid mt-4">
	<div class="row mb-4">
		<div class="col-md-6">
			<h1>Booking Management</h1>
		</div>

		<div class="col-md-6">
			<form method="get" class="form-inline justify-content-md-end">
				<div class="input-group">
					<input type="text" name="searchTerm" class="form-control" placeholder="Search...">
					<div class="input-group-append">
						<button type="submit" class="btn btn-primary">
							<i class="fa fa-search"></i> Search
						</button>
					</div>
				</div>
			</form>
		</div>

	</div>

	@if (TempData["Error"] != null)
	{
		<div class="alert alert-danger alert-dismissible fade show">
			@TempData["Error"]
			<button type="button" class="close" data-dismiss="alert">&times;</button>
		</div>
	}
	@if (TempData["Success"] != null)
	{
		<div class="alert alert-success alert-dismissible fade show">
			@TempData["Success"]
			<button type="button" class="close" data-dismiss="alert">&times;</button>
		</div>
	}

	<div class="card shadow">
		<div class="card-body">
			<div class="table-responsive">
				<table class="table table-hover">
					<thead class="thead-dark">
						<tr>
							<th>Appointment Date</th>
							<th>Status</th>
							<th>Customer</th>
							<th>Service</th>
							<th>Assigned Specialist</th>
							<th>Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Booking)
						{
							<tr>
								<td>@item.appointmentDay.ToString("MMM dd, yyyy") <span class="badge badge-light">@item.Slot?.startTime</span></td>
								<td>
									<span class=" @GetStatusBadgeClass(item.status)">
										@item.status
									</span>
								</td>
								<td>@item.Customer.fullName</td>
								<td>@item.Service?.serviceName</td>
								<td>
									@if (item.Therapist != null)
									{
										@item.Therapist.fullName
									}
									else
									{
										<span class="text-muted">Not assigned</span>
									}
								</td>
								<td>
									<div class="btn-group" role="group">
										@if (item.status == "pending")
										{
											<form method="post" asp-page-handler="CheckIn" asp-route-id="@item.BookingID">
												<button type="submit" class="btn btn-success btn-sm">
													<i class="fas fa-check-circle"></i> Check In
												</button>
											</form>
										}
										@if (item.status == "checkedIn" && item.Therapist == null)
										{
											<button class="btn btn-info btn-sm"
													data-toggle="modal"
													data-target="#assignModal"
													data-booking-id="@item.BookingID">
												<i class="fas fa-user-plus"></i> Assign Specialist
											</button>
										}
										@if (item.status == "inProgress")
										{
											<form method="post" asp-page-handler="CheckOut" asp-route-id="@item.BookingID">
												<button type="submit" class="btn btn-primary btn-sm">
													<i class="fas fa-sign-out-alt"></i> Check Out
												</button>
											</form>
										}
										<a asp-page="./Details" asp-route-id="@item.BookingID" class="btn btn-secondary btn-sm">
											<i class="fas fa-info-circle"></i> Details
										</a>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>

			<ul class="pagination">
				@for (var i = 1; i <= Model.TotalPages; i++)
				{
					<li class="page-item @(i == Model.PageIndex ? "active" : "")">
						<a class="page-link" asp-route-pageIndex="@i">@i</a>
					</li>
				}
			</ul>
		</div>
	</div>
</div>

<!-- Assign Specialist Modal -->
<div class="modal fade" id="assignModal" tabindex="-1">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title"><i class="fas fa-user-md"></i> Assign Specialist</h5>
				<button type="button" class="close" data-dismiss="modal">
					<span>&times;</span>
				</button>
			</div>
			<form method="post" asp-page-handler="AssignSpecialist">
				<div class="modal-body">
					<input type="hidden" name="bookingId" id="modalBookingId" />
					<div class="form-group">
						<label><i class="fas fa-user"></i> Select Specialist:</label>
						<div id="therapistLoadingSpinner" class="text-center">
							<div class="spinner-border text-primary" role="status">
								<span class="sr-only">Loading...</span>
							</div>
							<p>Loading available specialists...</p>
						</div>
						<select name="therapistId" id="therapistSelect" class="form-control" style="display: none;">
							<option value="">-- Select Specialist --</option>
						</select>
						<div id="noTherapistsMessage" class="alert alert-warning mt-2" style="display: none;">
							No specialists are available for this time slot.
						</div>
					</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">
						<i class="fas fa-times"></i> Close
					</button>
					<button type="submit" class="btn btn-primary">
						<i class="fas fa-check"></i> Assign
					</button>
				</div>
			</form>
		</div>
	</div>
</div>


@section Scripts {
	<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
	<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
	<script>
			   // Replace your existing modal script with this updated version
		$('#assignModal').on('show.bs.modal', function (event) {
			var button = $(event.relatedTarget);
			var bookingId = button.data('booking-id');
			$('#modalBookingId').val(bookingId);

			// Show loading spinner, hide select and messages
			$('#therapistLoadingSpinner').show();
			$('#therapistSelect').hide();
			$('#noTherapistsMessage').hide();

			// Clear previous options except the default one
			$('#therapistSelect option:not(:first)').remove();

			// Fetch available therapists for this booking
			$.ajax({
				url: '?handler=AvailableTherapists',
				data: { bookingId: bookingId },
				headers: {
					"RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
				},
				success: function(therapists) {
					// Hide loading spinner
					$('#therapistLoadingSpinner').hide();

					if (therapists && therapists.length > 0) {
						// Add therapists to select dropdown
						$.each(therapists, function(i, therapist) {
							$('#therapistSelect').append($('<option>', {
								value: therapist.value,
								text: therapist.text
							}));
						});

						// Show the select dropdown
						$('#therapistSelect').show();
					} else {
						// Show no therapists message
						$('#noTherapistsMessage').show();
					}
				},
				error: function() {
					// Hide loading spinner
					$('#therapistLoadingSpinner').hide();

					// Show error message
					$('#noTherapistsMessage').text('Error loading available specialists. Please try again.').show();
				}
			});
		});
	</script>
}

@functions {
	string GetStatusBadgeClass(string status)
	{
		// Normalize the status value
		var normalizedStatus = status?.Trim()
			.ToLower()
			.Replace(" ", "")
			.Replace("-", "")
			.Replace("_", "");

		return normalizedStatus switch
		{
			"pending" => "badge-secondary",
			"checkedin" => "badge-info",
			"inprogress" => "badge-warning",
			"completed" => "badge-success",
			_ => "badge-light"
		};
	}
}
@Html.AntiForgeryToken()